---
- name: Create service user for automation
  ansible.builtin.uri:
    url: "{{ komodo_auth_base_url }}/write"
    method: POST
    headers:
      Authorization: "{{ komodo_auth_jwt_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      type: "CreateServiceUser"
      params:
        username: "{{ komodo_auth_service_user }}"
        description: "{{ komodo_auth_service_user_description }}"
    status_code: [200, 201, 409, 500] # 409/500 if user already exists
  register: komodo_auth_service_user_response

- name: Get service user ID from creation response
  ansible.builtin.set_fact:
    komodo_auth_service_user_id: "{{ komodo_auth_service_user_response.json._id['$oid'] }}"
  when: komodo_auth_service_user_response.status in [200, 201]

- name: Find existing service user if creation failed
  ansible.builtin.uri:
    url: "{{ komodo_auth_base_url }}/read"
    method: POST
    headers:
      Authorization: "{{ komodo_auth_jwt_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      type: "FindUser"
      params:
        username: "{{ komodo_auth_service_user }}"
    status_code: [200]
  register: komodo_auth_find_user_response
  when: komodo_auth_service_user_response.status not in [200, 201]

- name: Get service user ID from find response
  ansible.builtin.set_fact:
    komodo_auth_service_user_id: "{{ komodo_auth_find_user_response.json._id['$oid'] }}"
  when: komodo_auth_service_user_response.status not in [200, 201]

- name: Grant service user admin permissions
  ansible.builtin.uri:
    url: "{{ komodo_auth_base_url }}/write"
    method: POST
    headers:
      Authorization: "{{ komodo_auth_jwt_token }}"
      Content-Type: "application/json"
    body_format: json
    body:
      type: "UpdateUserAdmin"
      params:
        user_id: "{{ komodo_auth_service_user_id }}"
        admin: true
    status_code: [200, 201]
  register: komodo_auth_update_permissions_response
