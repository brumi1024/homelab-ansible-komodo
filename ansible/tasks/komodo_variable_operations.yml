---
# Komodo Variable Management Operations
# Common tasks for managing Komodo global variables via API

- name: Create or update Komodo global variable
  ansible.builtin.uri:
    url: "{{ komodo_base_url }}/write"
    method: POST
    headers:
      X-Api-Key: "{{ komodo_api_key }}"
      X-Api-Secret: "{{ komodo_api_secret }}"
      Content-Type: "application/json"
    body_format: json
    body:
      type: "CreateVariable"
      params:
        name: "{{ variable_config.name }}"
        value: "{{ variable_config.value }}"
        description: "{{ variable_config.description | default('') }}"
        is_secret: "{{ variable_config.is_secret | default(false) }}"
    status_code: [200, 201, 409, 500] # 409 or 500 if variable already exists
  register: variable_result
  failed_when:
    - variable_result.status not in [200, 201, 409, 500]
    - variable_result.status == 500 and "duplicate key error" not in (variable_result.json.error | default(""))
  when: variable_config is defined
  no_log: true
  tags: [api, variables, create]

- name: Create multiple Komodo global variables
  ansible.builtin.uri:
    url: "{{ komodo_base_url }}/write"
    method: POST
    headers:
      X-Api-Key: "{{ komodo_api_key }}"
      X-Api-Secret: "{{ komodo_api_secret }}"
      Content-Type: "application/json"
    body_format: json
    body:
      type: "CreateVariable"
      params:
        name: "{{ item.name }}"
        value: "{{ item.value }}"
        description: "{{ item.description | default('') }}"
        is_secret: "{{ item.is_secret | default(false) }}"
    status_code: [200, 201, 409, 500] # 409 or 500 if variable already exists
  loop: "{{ variables_list }}"
  register: variables_results
  failed_when:
    - variables_results.status not in [200, 201, 409, 500]
    - variables_results.status == 500 and "duplicate key error" not in (variables_results.json.error | default(""))
  when: variables_list is defined
  no_log: true
  tags: [api, variables, create_multiple]

- name: List Komodo global variables
  ansible.builtin.uri:
    url: "{{ komodo_base_url }}/read"
    method: POST
    headers:
      X-Api-Key: "{{ komodo_api_key }}"
      X-Api-Secret: "{{ komodo_api_secret }}"
      Content-Type: "application/json"
    body_format: json
    body:
      type: "ListVariables"
      params: {}
    status_code: 200
  register: variables_list_result
  when: list_variables | default(false) | bool
  tags: [api, variables, list]

- name: Delete Komodo global variable
  ansible.builtin.uri:
    url: "{{ komodo_base_url }}/write"
    method: POST
    headers:
      X-Api-Key: "{{ komodo_api_key }}"
      X-Api-Secret: "{{ komodo_api_secret }}"
      Content-Type: "application/json"
    body_format: json
    body:
      type: "DeleteVariable"
      params:
        name: "{{ variable_name }}"
    status_code: [200, 201, 404] # 404 if variable doesn't exist
  register: delete_variable_result
  when:
    - variable_name is defined
    - delete_variable | default(false) | bool
  tags: [api, variables, delete]

- name: Check if variable exists
  ansible.builtin.set_fact:
    variable_exists: "{{ (variables_list_result.json | selectattr('name', 'equalto', variable_name) | list | length) > 0 }}"
  when:
    - variable_name is defined
    - variables_list_result is defined
    - check_variable_exists | default(false) | bool
  tags: [api, variables, check]
