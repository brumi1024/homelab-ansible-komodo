---
# Komodo Sync Operations - For resource sync management
# Include health check first since syncs depend on Core being available

- name: Ensure Komodo Core is healthy
  ansible.builtin.include_tasks: komodo_health_check.yml

- name: Create Komodo resource sync
  ansible.builtin.uri:
    url: "{{ komodo_base_url }}/write"
    method: POST
    headers:
      X-Api-Key: "{{ komodo_api_key }}"
      X-Api-Secret: "{{ komodo_api_secret }}"
      Content-Type: "application/json"
    body_format: json
    body:
      type: "CreateResourceSync"
      params:
        name: "{{ sync_config.name }}"
        config:
          repo: "{{ sync_config.repo }}"
          branch: "{{ sync_config.branch | default('main') }}"
          git_account: "{{ sync_config.git_account }}"
          resource_path: "{{ sync_config.resource_path }}"
          on_clone: "{{ sync_config.on_clone | default('PullAndDeploy') }}"
          on_pull: "{{ sync_config.on_pull | default('PullAndDeploy') }}"
          auto_pull: "{{ sync_config.auto_pull | default(true) }}"
          auto_deploy: "{{ sync_config.auto_deploy | default(true) }}"
    status_code: [200, 201, 409, 500] # 409 if already exists, 500 for unique name error
  register: resource_sync_result
  tags: [api, resource_sync]

- name: Create Komodo sync webhook
  ansible.builtin.uri:
    url: "{{ komodo_base_url }}/write"
    method: POST
    headers:
      X-Api-Key: "{{ komodo_api_key }}"
      X-Api-Secret: "{{ komodo_api_secret }}"
      Content-Type: "application/json"
    body_format: json
    body:
      type: "CreateSyncWebhook"
      params:
        sync: "{{ resource_sync_result.json.id | default(sync_config.name) }}"
        action: "Sync"
    status_code: [200, 201, 409, 500] # 409 if already exists, 500 for unique name error
  register: webhook_result
  when: resource_sync_result.status != 409
  tags: [api, webhook]

- name: Trigger resource sync execution
  ansible.builtin.uri:
    url: "{{ komodo_base_url }}/execute"
    method: POST
    headers:
      X-Api-Key: "{{ komodo_api_key }}"
      X-Api-Secret: "{{ komodo_api_secret }}"
      Content-Type: "application/json"
    body_format: json
    body:
      type: "RunSync"
      params:
        sync: "{{ resource_sync_result.json.id | default(sync_config.name) }}"
    status_code: [200, 201]
  register: sync_trigger_result
  when: trigger_sync | default(false)
  tags: [api, trigger_sync]

- name: Wait for sync to complete and check for errors
  ansible.builtin.uri:
    url: "{{ komodo_base_url }}/read"
    method: POST
    headers:
      X-Api-Key: "{{ komodo_api_key }}"
      X-Api-Secret: "{{ komodo_api_secret }}"
      Content-Type: "application/json"
    body_format: json
    body:
      type: "GetResourceSync"
      params:
        sync: "{{ resource_sync_result.json.id | default(sync_config.name) }}"
    status_code: 200
  register: sync_status
  until: sync_status.json.info.pending_error is none or sync_status.json.info.pending_error == ""
  retries: "{{ sync_wait_retries | default(30) }}"
  delay: "{{ sync_wait_delay | default(10) }}"
  failed_when: sync_status.json.info.pending_error is not none and sync_status.json.info.pending_error != ""
  when:
    - trigger_sync | default(false)
    - sync_trigger_result is defined
    - wait_for_sync_completion | default(true)
  tags: [api, sync_status]
